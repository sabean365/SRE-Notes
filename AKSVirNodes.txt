

AKS VIRTUAL NODES ~ Only Azure
	(Serverless)
	
	What is Virtual Kubelet?
		Virtual Kubelet is an open source Kubernetes kubelet implementation that acts as a kubelet for the purposes of connecting Kubernetes to other APIs. 
		This allows the k8s worker nodes to be backed by other services like Azure ACI and AWS Fargate
		The primary scenario for VK is enabling the extension of the Kubernetes API into serverless container platforms like Azure ACI and AWS Fargate
		
	How Virtual-Kubelet works? 
	Current Features
		create, delete and update pods
		container logs, exec, and metrics
		get pod, pods and pod status
		capacity
		node addresses, node capacity, node daemon endpoints
		operating system
		bring your own virtual network


	What is ACI (Azure Container Instances)?
		Azure Container Instances (ACI) provide a hosted environment for running containers in Azure. 
		When using ACI, there is no need to manage the underlying compute infrastructure, Azure handles this management for you. 
		When running containers in ACI, you are charged by the second for each running container

	Kubernetes Virtual Kubelet with Azure ACI
		The Azure Container Instances (ACI) provider for the Virtual Kubelet configures an ACI instance as a node in any Kubernetes cluster. 
		When using the Virtual Kubelet ACI provider, pods can be scheduled on an ACI instance as if the ACI instance is a standard Kubernetes node. 
		This configuration allows you to take advantage of both the capabilities of Kubernetes and the management value and cost benefit of ACI.

	Virtual Kubelet's ACI provider - Features
		Volumes: empty dir, github repo, Azure Files 
		Secure env variables, config maps
		Bring your own virtual network (VNet)
		Network security group support
		Basic Azure Networking support within AKS virtual node
		Exec support for container instances
		Azure Monitor integration or formally known as OMS

	Azure AKS – Virtual Nodes (Serverless)
		We can run our Kubernetes workloads on Serverless Infrastructure of Azure which is called Virtual Nodes
		Advantages:
			Scale our applications rapidly without any limitations
			Quick Provisioning of pods  using Virtual Nodes when compared to cluster autoscaler. 
			Cluster Autoscaler need to provision the Nodes in a managed node pool first then only Kubernetes can schedule pods on those newly  provisioned nodes.
			Limitations (Huge and Many)
			https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-cli#known-limitations


	Can only attach mysql to a disk through a VM


